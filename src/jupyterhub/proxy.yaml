# Configuration of our proxy pod.  This plays the role of a CoCalc-specific
# ingress controller, though it doesn't at all act as an actual controller.
# It just does would could be done by ingress.  You can't have ingress at the same
# time, since the ingress controller would also try to take over port 443, etc.

apiVersion: v1
kind: Pod
metadata:
  name: cocalc-proxy
  labels:
    app: cocalc-proxy
spec:
  # hostNetwork so that we can listen on port 443, 80 of the HOST VM
  hostNetwork: true
  # dnsPolicy so that proxy.json can refer to internal DNS inside the cluster
  dnsPolicy: ClusterFirstWithHostNet
  containers:
    - name: http-proxy
      image: sagemathinc/proxy:1.0
      ports:
        - containerPort: 443
        - containerPort: 80
      volumeMounts:
        - name: secret-token-volume
          mountPath: /etc/secret
        - name: proxy-config-volume
          mountPath: /jupyterhub
      env:
        - name: PROXY_CONFIG
          value: "/jupyterhub/proxy.json"
        - name: PROXY_PORT
          value: "443"
        - name: PROXY_HOSTNAME
          value: "0.0.0.0"
        - name: DEBUG
          value: "*"
        - name: PROXY_AUTH_TOKEN_FILE
          value: "/etc/secret/auth_token"
  volumes:
    - name: secret-token-volume
      secret:
        secretName: secret-token
    - name: proxy-config-volume
      configMap:
        name: proxy-config
