From 512efcea97f16632bec2506371f696d438acdb31 Mon Sep 17 00:00:00 2001
From: William Stein <wstein@sagemath.com>
Date: Sat, 22 Jun 2024 15:23:11 +0000
Subject: [PATCH 1/5] make the inode batch size configurable

---
 cmd/flags.go       | 15 +++++++++++++++
 cmd/mount.go       |  3 +++
 pkg/meta/base.go   |  5 ++---
 pkg/meta/config.go |  3 +++
 4 files changed, 23 insertions(+), 3 deletions(-)

diff --git a/cmd/flags.go b/cmd/flags.go
index d0b72efa..b2232273 100644
--- a/cmd/flags.go
+++ b/cmd/flags.go
@@ -280,6 +280,21 @@ func metaFlags() []cli.Flag {
 			Value: "100ms",
 			Usage: "skip updating attribute of a directory if the mtime difference is smaller than this value",
 		},
+		&cli.IntFlag{
+			Name:  "inode-batch-size",
+			Value: 1024,
+			Usage: "the inode batch size",
+		},
+		&cli.IntFlag{
+			Name:  "inode-batch-modulus",
+			Value: 1,
+			Usage: "the inode batch modulus",
+		},
+		&cli.IntFlag{
+			Name:  "inode-batch-residue",
+			Value: 0,
+			Usage: "the inode batch residue",
+		},
 	})
 }
 
diff --git a/cmd/mount.go b/cmd/mount.go
index 8d712c9c..9095b01b 100644
--- a/cmd/mount.go
+++ b/cmd/mount.go
@@ -311,6 +311,9 @@ func getMetaConf(c *cli.Context, mp string, readOnly bool) *meta.Config {
 	conf.Subdir = c.String("subdir")
 	conf.SkipDirMtime = utils.Duration(c.String("skip-dir-mtime"))
 	conf.Sid, _ = strconv.ParseUint(os.Getenv("_JFS_META_SID"), 10, 64)
+	conf.InodeBatchSize = c.Int64("inode-batch-size")
+	conf.InodeBatchModulus = c.Uint64("inode-batch-modulus")
+	conf.InodeBatchResidue = c.Uint64("inode-batch-residue")
 
 	atimeMode := c.String("atime-mode")
 	if atimeMode != meta.RelAtime && atimeMode != meta.StrictAtime && atimeMode != meta.NoAtime {
diff --git a/pkg/meta/base.go b/pkg/meta/base.go
index e32b3d83..06382efc 100644
--- a/pkg/meta/base.go
+++ b/pkg/meta/base.go
@@ -40,7 +40,6 @@ import (
 )
 
 const (
-	inodeBatch   = 1 << 10
 	sliceIdBatch = 4 << 10
 	nlocks       = 1024
 )
@@ -947,11 +946,11 @@ func (m *baseMeta) nextInode() (Ino, error) {
 	m.freeMu.Lock()
 	defer m.freeMu.Unlock()
 	if m.freeInodes.next >= m.freeInodes.maxid {
-		v, err := m.en.incrCounter("nextInode", inodeBatch)
+		v, err := m.en.incrCounter("nextInode", m.conf.InodeBatchSize)
 		if err != nil {
 			return 0, err
 		}
-		m.freeInodes.next = uint64(v) - inodeBatch
+		m.freeInodes.next = uint64(v) - uint64(m.conf.InodeBatchSize)
 		m.freeInodes.maxid = uint64(v)
 	}
 	n := m.freeInodes.next
diff --git a/pkg/meta/config.go b/pkg/meta/config.go
index 0011f5b0..3ea77214 100644
--- a/pkg/meta/config.go
+++ b/pkg/meta/config.go
@@ -49,6 +49,9 @@ type Config struct {
 	DirStatFlushPeriod time.Duration
 	SkipDirMtime       time.Duration
 	Sid                uint64
+	InodeBatchSize     int64
+	InodeBatchModulus  uint64
+	InodeBatchResidue  uint64
 }
 
 func DefaultConf() *Config {
-- 
2.43.0

